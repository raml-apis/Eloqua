#%RAML 0.8
title: Eloqua
baseUri: https://secure.eloqua.com
securitySchemes:
  - basic: !include securitySchemes/basic.raml
schemas:
  - cloudComponent: !include schemas/cloudComponent-schema.json
  - contactImport: !include schemas/contactImport-schema.json
  - productPermission: !include schemas/productPermission-schema.json
  - fieldMerge: !include schemas/fieldMerge-schema.json
  - minimal: !include schemas/minimal-schema.json
  - landingPage: !include schemas/landingPage-schema.json
  - userPreferences: !include schemas/userPreferences-schema.json
  - sftpConnection: !include schemas/sftpConnection-schema.json
  - dataExport: !include schemas/dataExport-schema.json
  - eventSessionField: !include schemas/eventSessionField-schema.json
  - campaignLeadStage: !include schemas/campaignLeadStage-schema.json
  - exportLog: !include schemas/exportLog-schema.json
  - campaignOutputTerminal: !include schemas/campaignOutputTerminal-schema.json
  - requestError: !include schemas/requestError-schema.json
  - option: !include schemas/option-schema.json
  - template: !include schemas/template-schema.json
  - form: !include schemas/form-schema.json
  - redirectLink: !include schemas/redirectLink-schema.json
  - contactViewData: !include schemas/contactViewData-schema.json
  - campaignElement: !include schemas/campaignElement-schema.json
  - emailEncoding: !include schemas/emailEncoding-schema.json
  - customObjectUpdateRuleSet: !include schemas/customObjectUpdateRuleSet-schema.json
  - criterion: !include schemas/criterion-schema.json
  - objectKey: !include schemas/objectKey-schema.json
  - fieldValue: !include schemas/fieldValue-schema.json
  - customObjectField: !include schemas/customObjectField-schema.json
  - contactUpdateRuleSet: !include schemas/contactUpdateRuleSet-schema.json
  - contactFilter: !include schemas/contactFilter-schema.json
  - updateRule: !include schemas/updateRule-schema.json
  - position: !include schemas/position-schema.json
  - emailHeader: !include schemas/emailHeader-schema.json
  - contactFieldData: !include schemas/contactFieldData-schema.json
  - programActivity: !include schemas/programActivity-schema.json
  - urlReplacement: !include schemas/urlReplacement-schema.json
  - contact: !include schemas/contact-schema.json
  - dataImportFieldMap: !include schemas/dataImportFieldMap-schema.json
  - importLog: !include schemas/importLog-schema.json
  - contactView: !include schemas/contactView-schema.json
  - accountUpdateRuleSet: !include schemas/accountUpdateRuleSet-schema.json
  - emailSignatureLayout: !include schemas/emailSignatureLayout-schema.json
  - campaign: !include schemas/campaign-schema.json
  - scheduledTaskLog: !include schemas/scheduledTaskLog-schema.json
  - campaignField: !include schemas/campaignField-schema.json
  - site: !include schemas/site-schema.json
  - visitorNotification: !include schemas/visitorNotification-schema.json
  - bouncebackActivity: !include schemas/bouncebackActivity-schema.json
  - automationActivity: !include schemas/automationActivity-schema.json
  - emailConfig: !include schemas/emailConfig-schema.json
  - emailDeployment: !include schemas/emailDeployment-schema.json
  - formIntegration: !include schemas/formIntegration-schema.json
  - accountImport: !include schemas/accountImport-schema.json
  - campaignSetting: !include schemas/campaignSetting-schema.json
  - folder: !include schemas/folder-schema.json
  - delimitedFileFormat: !include schemas/delimitedFileFormat-schema.json
  - interfacePermission: !include schemas/interfacePermission-schema.json
  - dynamicContent: !include schemas/dynamicContent-schema.json
  - emailSignatureRule: !include schemas/emailSignatureRule-schema.json
  - account: !include schemas/account-schema.json
  - typePermission: !include schemas/typePermission-schema.json
  - eventRegistration: !include schemas/eventRegistration-schema.json
  - segmentElement: !include schemas/segmentElement-schema.json
  - customObjectData: !include schemas/customObjectData-schema.json
  - importRecord: !include schemas/importRecord-schema.json
  - contactSegmentCount: !include schemas/contactSegmentCount-schema.json
  - dataView: !include schemas/dataView-schema.json
  - scheduledImport: !include schemas/scheduledImport-schema.json
  - accountField: !include schemas/accountField-schema.json
  - dataImportPreview: !include schemas/dataImportPreview-schema.json
  - pageTagGroup: !include schemas/pageTagGroup-schema.json
  - externalCallActivity: !include schemas/externalCallActivity-schema.json
  - formData: !include schemas/formData-schema.json
  - programStep: !include schemas/programStep-schema.json
  - hyperlink: !include schemas/hyperlink-schema.json
  - visitorNotificationRule: !include schemas/visitorNotificationRule-schema.json
  - programLog: !include schemas/programLog-schema.json
  - dataImport: !include schemas/dataImport-schema.json
  - trackedUrl: !include schemas/trackedUrl-schema.json
  - securityGroup: !include schemas/securityGroup-schema.json
  - accountFieldData: !include schemas/accountFieldData-schema.json
  - emailGroup: !include schemas/emailGroup-schema.json
  - contentSection: !include schemas/contentSection-schema.json
  - accountView: !include schemas/accountView-schema.json
  - size: !include schemas/size-schema.json
  - email: !include schemas/email-schema.json
  - program: !include schemas/program-schema.json
  - templateCategory: !include schemas/templateCategory-schema.json
  - dataField: !include schemas/dataField-schema.json
  - microsite: !include schemas/microsite-schema.json
  - formProcessingStep: !include schemas/formProcessingStep-schema.json
  - typePermissions: !include schemas/typePermissions-schema.json
  - contactEmailDeliverability: !include schemas/contactEmailDeliverability-schema.json
  - cloudComponentProvider: !include schemas/cloudComponentProvider-schema.json
  - timeZone: !include schemas/timeZone-schema.json
  - updateRuleSet: !include schemas/updateRuleSet-schema.json
  - documentStyle: !include schemas/documentStyle-schema.json
  - emailFooter: !include schemas/emailFooter-schema.json
  - htmlContent: !include schemas/htmlContent-schema.json
  - assetGrant: !include schemas/assetGrant-schema.json
  - queueInfo: !include schemas/queueInfo-schema.json
  - contactEmailSubscription: !include schemas/contactEmailSubscription-schema.json
  - pageTag: !include schemas/pageTag-schema.json
  - imageFile: !include schemas/imageFile-schema.json
  - notification: !include schemas/notification-schema.json
  - cloudComponentImage: !include schemas/cloudComponentImage-schema.json
  - optionList: !include schemas/optionList-schema.json
  - activity: !include schemas/activity-schema.json
  - scheduledExport: !include schemas/scheduledExport-schema.json
  - requirement: !include schemas/requirement-schema.json
  - export: !include schemas/export-schema.json
  - contactField: !include schemas/contactField-schema.json
  - accountViewData: !include schemas/accountViewData-schema.json
  - objectValidationError: !include schemas/objectValidationError-schema.json
  - contactList: !include schemas/contactList-schema.json
  - contactSegment: !include schemas/contactSegment-schema.json
  - dynamicContentRule: !include schemas/dynamicContentRule-schema.json
  - dataImportPriority: !include schemas/dataImportPriority-schema.json
  - weeklySchedule: !include schemas/weeklySchedule-schema.json
  - campaignResponseActivity: !include schemas/campaignResponseActivity-schema.json
  - customObject: !include schemas/customObject-schema.json
  - integrationRuleSet: !include schemas/integrationRuleSet-schema.json
  - campaignResponseRule: !include schemas/campaignResponseRule-schema.json
  - formNotification: !include schemas/formNotification-schema.json
  - formElement: !include schemas/formElement-schema.json
  - scheduledTaskSchedule: !include schemas/scheduledTaskSchedule-schema.json
  - scheduledTask: !include schemas/scheduledTask-schema.json
  - cloudComponentInstance: !include schemas/cloudComponentInstance-schema.json
  - importedFile: !include schemas/importedFile-schema.json
  - user: !include schemas/user-schema.json
  - fieldOutputFormat: !include schemas/fieldOutputFormat-schema.json
resourceTypes:
  - responseCodes: !include resourceTypes/responseCodes.raml
traits:
  - advancedSearch: !include traits/advancedSearch.raml
  - pagination: !include traits/pagination.raml
  - extensions: !include traits/extensions.raml
securedBy: [ basic ]
/data: 
  /account: 
    type: responseCodes
    post: 
      description: Create object
      body: 
        application/json: 
          schema: account
          example: !include examples/account-example.json
      responses: 
        200: 
          body: 
            application/json: 
              schema: account
              example: !include examples/account-example.json
    /{id}: 
      type: responseCodes
      put: 
        description: Update object
        body: 
          application/json: 
            schema: account
            example: !include examples/account-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: account
                example: !include examples/account-example.json
      delete: 
        description: Delete object
        responses: 
          200: 
      get: 
        description: Retrieve object
        queryParameters: 
          depth: 
          viewId: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: account
                example: !include examples/account-example.json
    /view: 
      /{id}: 
        /account: 
          /{accountId}: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: accountViewData
                      example: !include examples/accountViewData-example.json
        /accounts: 
          type: responseCodes
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountViewData
                    example: !include examples/accountViewData-example.json
  /accounts: 
    type: responseCodes
    get: 
      is: [ advancedSearch ]
      description: Retrieve object
      queryParameters: 
        depth: 
        viewId: 
      responses: 
        200: 
          body: 
            application/json: 
              schema: account
              example: !include examples/account-example.json
  /activities: 
    /contact: 
      /{id}: 
        type: responseCodes
        get: 
          description: Retrieve object
          queryParameters: 
            type: 
            startDate: 
            endDate: 
            count: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: activity
                  example: !include examples/activity-example.json
        /automation: 
          type: responseCodes
          get: 
            is: [ pagination ]
            description: Retrieve object
            queryParameters: 
              startAt: 
              endAt: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: automationActivity
                    example: !include examples/automationActivity-example.json
          /bounceback: 
            type: responseCodes
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                startAt: 
                endAt: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: bouncebackActivity
                      example: !include examples/bouncebackActivity-example.json
          /externalcall: 
            type: responseCodes
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                startAt: 
                endAt: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: externalCallActivity
                      example: !include examples/externalCallActivity-example.json
          /program: 
            type: responseCodes
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                startAt: 
                endAt: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: programActivity
                      example: !include examples/programActivity-example.json
  /contact: 
    type: responseCodes
    post: 
      description: Create object
      body: 
        application/json: 
          schema: contact
          example: !include examples/contact-example.json
      responses: 
        200: 
          body: 
            application/json: 
              schema: contact
              example: !include examples/contact-example.json
    /{id}: 
      type: responseCodes
      put: 
        description: Update object
        body: 
          application/json: 
            schema: contact
            example: !include examples/contact-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: contact
                example: !include examples/contact-example.json
      delete: 
        description: Delete object
        responses: 
          200: 
      get: 
        description: Retrieve object
        queryParameters: 
          depth: 
          viewId: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: contact
                example: !include examples/contact-example.json
      /email: 
        /group: 
          /{groupId}: 
            /subscription: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: contactEmailSubscription
                        example: !include examples/contactEmailSubscription-example.json
              put: 
                description: Update object
                body: 
                  application/json: 
                    schema: contactEmailSubscription
                    example: !include examples/contactEmailSubscription-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: contactEmailSubscription
                        example: !include examples/contactEmailSubscription-example.json
        /groups: 
          /subscription: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactEmailSubscription
                      example: !include examples/contactEmailSubscription-example.json
    /view: 
      /{id}: 
        /contact: 
          /{contactId}: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactViewData
                      example: !include examples/contactViewData-example.json
        /contacts: 
          type: responseCodes
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactViewData
                    example: !include examples/contactViewData-example.json
          /campaign: 
            /element: 
              /{elementId}: 
                type: responseCodes
                get: 
                  is: [ advancedSearch ]
                  description: Retrieve object
                  responses: 
                    200: 
                      body: 
                        application/json: 
                          schema: contactViewData
                          example: !include examples/contactViewData-example.json
          /filter: 
            /{filterId}: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: contactViewData
                        example: !include examples/contactViewData-example.json
          /list: 
            /{listId}: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: contactViewData
                        example: !include examples/contactViewData-example.json
          /segment: 
            /{segmentId}: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: contactViewData
                        example: !include examples/contactViewData-example.json
              /excluded: 
                type: responseCodes
                get: 
                  is: [ advancedSearch ]
                  description: Retrieve object
                  responses: 
                    200: 
                      body: 
                        application/json: 
                          schema: contactViewData
                          example: !include examples/contactViewData-example.json
              /included: 
                type: responseCodes
                get: 
                  is: [ advancedSearch ]
                  description: Retrieve object
                  responses: 
                    200: 
                      body: 
                        application/json: 
                          schema: contactViewData
                          example: !include examples/contactViewData-example.json
  /contacts: 
    type: responseCodes
    get: 
      is: [ advancedSearch ]
      description: Retrieve object
      queryParameters: 
        depth: 
        viewId: 
      responses: 
        200: 
          body: 
            application/json: 
              schema: contact
              example: !include examples/contact-example.json
    /campaign: 
      /element: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            queryParameters: 
              depth: 
              viewId: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contact
                    example: !include examples/contact-example.json
          /export: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: dataExport
                  example: !include examples/dataExport-example.json
              responses: 
                200: 
    /filter: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ advancedSearch ]
          description: Retrieve object
          queryParameters: 
            depth: 
            viewId: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contact
                  example: !include examples/contact-example.json
        /export: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: dataExport
                example: !include examples/dataExport-example.json
            responses: 
              200: 
    /list: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ advancedSearch ]
          description: Retrieve object
          queryParameters: 
            depth: 
            viewId: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contact
                  example: !include examples/contact-example.json
        /export: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: dataExport
                example: !include examples/dataExport-example.json
            responses: 
              200: 
    /segment: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ advancedSearch ]
          description: Retrieve object
          queryParameters: 
            depth: 
            viewId: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contact
                  example: !include examples/contact-example.json
        /excluded: 
          type: responseCodes
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            queryParameters: 
              depth: 
              viewId: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contact
                    example: !include examples/contact-example.json
        /export: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: dataExport
                example: !include examples/dataExport-example.json
            responses: 
              200: 
        /included: 
          type: responseCodes
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            queryParameters: 
              depth: 
              viewId: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contact
                    example: !include examples/contact-example.json
  /customObject: 
    /{id}: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: customObjectData
            example: !include examples/customObjectData-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: customObjectData
                example: !include examples/customObjectData-example.json
      get: 
        is: [ advancedSearch ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: customObjectData
                example: !include examples/customObjectData-example.json
  /form: 
    /{id}: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: formData
            example: !include examples/formData-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: formData
                example: !include examples/formData-example.json
      get: 
        is: [ pagination ]
        description: Retrieve object
        queryParameters: 
          startAt: 
          endAt: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: formData
                example: !include examples/formData-example.json
      /export: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: dataExport
              example: !include examples/dataExport-example.json
          responses: 
            200: 
/settings: 
  /campaign: 
    type: responseCodes
    get: 
      description: Retrieve object
      responses: 
        200: 
          body: 
            application/json: 
              schema: campaignSetting
              example: !include examples/campaignSetting-example.json
    put: 
      description: Update object
      body: 
        application/json: 
          schema: campaignSetting
          example: !include examples/campaignSetting-example.json
      responses: 
        200: 
          body: 
            application/json: 
              schema: campaignSetting
              example: !include examples/campaignSetting-example.json
    /responseActivities: 
      type: responseCodes
      get: 
        is: [ pagination ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: campaignResponseActivity
                example: !include examples/campaignResponseActivity-example.json
  /notification: 
    /visitor: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: visitorNotification
            example: !include examples/visitorNotification-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: visitorNotification
                example: !include examples/visitorNotification-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: visitorNotification
              example: !include examples/visitorNotification-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: visitorNotification
                  example: !include examples/visitorNotification-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: visitorNotification
                  example: !include examples/visitorNotification-example.json
      /rule: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: visitorNotificationRule
              example: !include examples/visitorNotificationRule-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: visitorNotificationRule
                  example: !include examples/visitorNotificationRule-example.json
        /{id}: 
          type: responseCodes
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: visitorNotificationRule
                    example: !include examples/visitorNotificationRule-example.json
  /notifications: 
    /form: 
      type: responseCodes
      get: 
        is: [ advancedSearch ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: formNotification
                example: !include examples/formNotification-example.json
    /visitor: 
      type: responseCodes
      get: 
        is: [ advancedSearch ]
        description: Retrieve object
        queryParameters: 
          user: 
          extensions: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: visitorNotification
                example: !include examples/visitorNotification-example.json
/system: 
  /cloud: 
    /component: 
      /enabled: 
        /{id}: 
          type: responseCodes
          delete: 
            description: Delete object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: cloudComponent
                    example: !include examples/cloudComponent-example.json
      /provider: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: cloudComponentProvider
                    example: !include examples/cloudComponentProvider-example.json
      /providers: 
        type: responseCodes
        get: 
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: cloudComponentProvider
                  example: !include examples/cloudComponentProvider-example.json
    /components: 
      type: responseCodes
      get: 
        description: Retrieve object
        queryParameters: 
          page: 
          pageSize: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: cloudComponent
                example: !include examples/cloudComponent-example.json
      /enabled: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: cloudComponent
              example: !include examples/cloudComponent-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: cloudComponent
                  example: !include examples/cloudComponent-example.json
        get: 
          description: Retrieve object
          queryParameters: 
            page: 
            pageSize: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: cloudComponent
                  example: !include examples/cloudComponent-example.json
  /scheduledtask: 
    /connection: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: sftpConnection
            example: !include examples/sftpConnection-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: sftpConnection
                example: !include examples/sftpConnection-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: sftpConnection
              example: !include examples/sftpConnection-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: sftpConnection
                  example: !include examples/sftpConnection-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: sftpConnection
                  example: !include examples/sftpConnection-example.json
        /test: 
          type: responseCodes
          post: 
            description: Create object
            queryParameters: 
              path: 
            responses: 
              200: 
    /connections: 
      type: responseCodes
      get: 
        is: [ pagination ]
        description: Retrieve object
        queryParameters: 
          depth: 
          search: 
          orderBy: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: sftpConnection
                example: !include examples/sftpConnection-example.json
  /scheduledTask: 
    /export: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: scheduledExport
            example: !include examples/scheduledExport-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: scheduledExport
                example: !include examples/scheduledExport-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: scheduledExport
              example: !include examples/scheduledExport-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: scheduledExport
                  example: !include examples/scheduledExport-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: scheduledExport
                  example: !include examples/scheduledExport-example.json
        /logs: 
          type: responseCodes
          get: 
            is: [ pagination ]
            description: Retrieve object
            queryParameters: 
              startAt: 
              endAt: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: exportLog
                    example: !include examples/exportLog-example.json
      /queue: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
    /exports: 
      type: responseCodes
      get: 
        is: [ pagination ]
        description: Retrieve object
        queryParameters: 
          depth: 
          search: 
          orderBy: 
        responses: 
          200: 
            body: 
              application/json: 
                schema: scheduledExport
                example: !include examples/scheduledExport-example.json
    /import: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: scheduledImport
            example: !include examples/scheduledImport-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: scheduledImport
                example: !include examples/scheduledImport-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: scheduledImport
              example: !include examples/scheduledImport-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: scheduledImport
                  example: !include examples/scheduledImport-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: scheduledImport
                  example: !include examples/scheduledImport-example.json
        /logs: 
          type: responseCodes
          get: 
            is: [ pagination ]
            description: Retrieve object
            queryParameters: 
              startAt: 
              endAt: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: importLog
                    example: !include examples/importLog-example.json
      /queue: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
        /refresh: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
    /imports: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: scheduledImport
                example: !include examples/scheduledImport-example.json
  /scheduledTasks: 
    type: responseCodes
    get: 
      is: [ pagination ]
      description: Retrieve object
      queryParameters: 
        depth: 
        search: 
        orderBy: 
      responses: 
        200: 
          body: 
            application/json: 
              schema: scheduledExport
              example: !include examples/scheduledExport-example.json
  /security: 
    /group: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: securityGroup
                  example: !include examples/securityGroup-example.json
        /security: 
          /assetGrants: 
            type: responseCodes
            patch: 
              description: ""
              body: 
                application/json: 
                  schema: assetGrant
                  example: !include examples/assetGrant-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
            get: 
              is: [ advancedSearch , extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
    /groups: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: securityGroup
                example: !include examples/securityGroup-example.json
  /site: 
    type: responseCodes
    get: 
      description: Retrieve object
      queryParameters: 
        depth: 
      responses: 
        200: 
          body: 
            application/json: 
              schema: site
              example: !include examples/site-example.json
  /timeZones: 
    type: responseCodes
    get: 
      description: Retrieve object
      responses: 
        200: 
          body: 
            application/json: 
              schema: timeZone
              example: !include examples/timeZone-example.json
  /user: 
    /{id}: 
      type: responseCodes
      put: 
        description: Update object
        body: 
          application/json: 
            schema: user
            example: !include examples/user-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: user
                example: !include examples/user-example.json
      get: 
        is: [ extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: user
                example: !include examples/user-example.json
      /security: 
        /assetGrants: 
          type: responseCodes
          patch: 
            description: ""
            body: 
              application/json: 
                schema: assetGrant
                example: !include examples/assetGrant-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
    /current: 
      type: responseCodes
      get: 
        is: [ extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: user
                example: !include examples/user-example.json
  /users: 
    type: responseCodes
    get: 
      is: [ advancedSearch , extensions ]
      description: Retrieve object
      responses: 
        200: 
          body: 
            application/json: 
              schema: user
              example: !include examples/user-example.json
/systems: 
  /integration: 
    /integrationRuleSet: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: integrationRuleSet
                  example: !include examples/integrationRuleSet-example.json
    /integrationRuleSets: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: integrationRuleSet
                example: !include examples/integrationRuleSet-example.json
/assets: 
  type: responseCodes
  get: 
    is: [ extensions ]
    description: Retrieve object
    queryParameters: 
      count: 
      search: 
      orderBy: 
      lastUpdatedAt: 
    responses: 
      200: 
        body: 
          application/json: 
            schema: minimal
            example: !include examples/minimal-example.json
  /: 
    /account: 
      /field: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: accountField
              example: !include examples/accountField-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountField
                  example: !include examples/accountField-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: accountField
                example: !include examples/accountField-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountField
                    example: !include examples/accountField-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountField
                    example: !include examples/accountField-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /fields: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountField
                  example: !include examples/accountField-example.json
      /import: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: accountImport
              example: !include examples/accountImport-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountImport
                  example: !include examples/accountImport-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: accountImport
                example: !include examples/accountImport-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountImport
                    example: !include examples/accountImport-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountImport
                    example: !include examples/accountImport-example.json
          /{fileType}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: accountImport
                      example: !include examples/accountImport-example.json
          /preview: 
            type: responseCodes
            get: 
              description: Retrieve object
              queryParameters: 
                count: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: dataImportPreview
                      example: !include examples/dataImportPreview-example.json
        /priorities: 
          type: responseCodes
          get: 
            is: [ pagination , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: dataImportPriority
                    example: !include examples/dataImportPriority-example.json
        /priority: 
          /{id}: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: dataImportPriority
                      example: !include examples/dataImportPriority-example.json
        /queue: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
      /imports: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountImport
                  example: !include examples/accountImport-example.json
      /updateRuleSet: 
        /{id}: 
          type: responseCodes
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            description: Retrieve object
            queryParameters: 
              depth: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountUpdateRuleSet
                    example: !include examples/accountUpdateRuleSet-example.json
      /updateRuleSets: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountUpdateRuleSet
                  example: !include examples/accountUpdateRuleSet-example.json
      /view: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: accountView
              example: !include examples/accountView-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountView
                  example: !include examples/accountView-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: accountView
                example: !include examples/accountView-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountView
                    example: !include examples/accountView-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: accountView
                    example: !include examples/accountView-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
      /views: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: accountView
                  example: !include examples/accountView-example.json
    /campaign: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: campaign
            example: !include examples/campaign-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: campaign
                example: !include examples/campaign-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: campaign
              example: !include examples/campaign-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: campaign
                  example: !include examples/campaign-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: campaign
                  example: !include examples/campaign-example.json
        /active: 
          /validationErrors: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: objectValidationError
                      example: !include examples/objectValidationError-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: campaign
                example: !include examples/campaign-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaign
                    example: !include examples/campaign-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
        /security: 
          /grants: 
            type: responseCodes
            patch: 
              description: ""
              body: 
                application/json: 
                  schema: assetGrant
                  example: !include examples/assetGrant-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                depth: 
                orderBy: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
      /active: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaign
                    example: !include examples/campaign-example.json
      /draft: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaign
                    example: !include examples/campaign-example.json
      /field: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: campaignField
              example: !include examples/campaignField-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: campaignField
                  example: !include examples/campaignField-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: campaignField
                example: !include examples/campaignField-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaignField
                    example: !include examples/campaignField-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaignField
                    example: !include examples/campaignField-example.json
      /fields: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: campaignField
                  example: !include examples/campaignField-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
      /template: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaign
                    example: !include examples/campaign-example.json
    /campaigns: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: campaign
                example: !include examples/campaign-example.json
      /recent: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          queryParameters: 
            count: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: campaign
                  example: !include examples/campaign-example.json
    /cloud: 
      /component: 
        /{componentId}: 
          /instance: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: cloudComponentInstance
                      example: !include examples/cloudComponentInstance-example.json
        /instance: 
          /{id}: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: cloudComponentInstance
                      example: !include examples/cloudComponentInstance-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
    /contact: 
      /field: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactField
              example: !include examples/contactField-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactField
                  example: !include examples/contactField-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactField
                example: !include examples/contactField-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactField
                    example: !include examples/contactField-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactField
                    example: !include examples/contactField-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /fields: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactField
                  example: !include examples/contactField-example.json
      /filter: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactFilter
              example: !include examples/contactFilter-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactFilter
                  example: !include examples/contactFilter-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactFilter
                example: !include examples/contactFilter-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactFilter
                    example: !include examples/contactFilter-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactFilter
                    example: !include examples/contactFilter-example.json
          /active: 
            /validationErrors: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: objectValidationError
                        example: !include examples/objectValidationError-example.json
          /copy: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: contactFilter
                  example: !include examples/contactFilter-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactFilter
                      example: !include examples/contactFilter-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /list: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: contactList
                  example: !include examples/contactList-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactList
                      example: !include examples/contactList-example.json
          /remainder: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: minimal
                  example: !include examples/minimal-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactList
                      example: !include examples/contactList-example.json
        /active: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactFilter
                      example: !include examples/contactFilter-example.json
        /draft: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactFilter
                      example: !include examples/contactFilter-example.json
        /folder: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /dependencies: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /folders: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: folder
                        example: !include examples/folder-example.json
          /root: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
        /folders: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
        /queue: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
      /filters: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactFilter
                  example: !include examples/contactFilter-example.json
      /import: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactImport
              example: !include examples/contactImport-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactImport
                  example: !include examples/contactImport-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactImport
                example: !include examples/contactImport-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactImport
                    example: !include examples/contactImport-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactImport
                    example: !include examples/contactImport-example.json
          /{fileType}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactImport
                      example: !include examples/contactImport-example.json
          /preview: 
            type: responseCodes
            get: 
              description: Retrieve object
              queryParameters: 
                count: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: dataImportPreview
                      example: !include examples/dataImportPreview-example.json
        /priorities: 
          type: responseCodes
          get: 
            is: [ pagination , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: dataImportPriority
                    example: !include examples/dataImportPriority-example.json
        /priority: 
          /{id}: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: dataImportPriority
                      example: !include examples/dataImportPriority-example.json
        /queue: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
      /imports: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactImport
                  example: !include examples/contactImport-example.json
      /list: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactList
              example: !include examples/contactList-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactList
                  example: !include examples/contactList-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactList
                example: !include examples/contactList-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactList
                    example: !include examples/contactList-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactList
                    example: !include examples/contactList-example.json
          /copy: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: contactList
                  example: !include examples/contactList-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactList
                      example: !include examples/contactList-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /remainder: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: minimal
                  example: !include examples/minimal-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactList
                      example: !include examples/contactList-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
        /folder: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /dependencies: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /folders: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: folder
                        example: !include examples/folder-example.json
          /root: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
        /folders: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
        /intersection: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: minimal
                example: !include examples/minimal-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactList
                    example: !include examples/contactList-example.json
        /union: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: minimal
                example: !include examples/minimal-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactList
                    example: !include examples/contactList-example.json
      /lists: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactList
                  example: !include examples/contactList-example.json
      /segment: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactSegment
              example: !include examples/contactSegment-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactSegment
                  example: !include examples/contactSegment-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactSegment
                example: !include examples/contactSegment-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactSegment
                    example: !include examples/contactSegment-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactSegment
                    example: !include examples/contactSegment-example.json
          /active: 
            /validationErrors: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: objectValidationError
                        example: !include examples/objectValidationError-example.json
          /copy: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: contactSegment
                  example: !include examples/contactSegment-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactSegment
                      example: !include examples/contactSegment-example.json
          /count: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactSegmentCount
                      example: !include examples/contactSegmentCount-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /list: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: contactList
                  example: !include examples/contactList-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactList
                      example: !include examples/contactList-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
        /active: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactSegment
                      example: !include examples/contactSegment-example.json
        /draft: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactSegment
                      example: !include examples/contactSegment-example.json
        /folder: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /dependencies: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /folders: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: folder
                        example: !include examples/folder-example.json
          /root: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
        /folders: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
        /queue: 
          /{id}: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: queueInfo
                      example: !include examples/queueInfo-example.json
        /template: 
          /{id}: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: contactSegment
                      example: !include examples/contactSegment-example.json
      /segments: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactSegment
                  example: !include examples/contactSegment-example.json
        /recent: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            queryParameters: 
              count: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactSegment
                    example: !include examples/contactSegment-example.json
      /updateRuleSet: 
        /{id}: 
          type: responseCodes
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            description: Retrieve object
            queryParameters: 
              depth: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactUpdateRuleSet
                    example: !include examples/contactUpdateRuleSet-example.json
      /updateRuleSets: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactUpdateRuleSet
                  example: !include examples/contactUpdateRuleSet-example.json
      /view: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: contactView
              example: !include examples/contactView-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactView
                  example: !include examples/contactView-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: contactView
                example: !include examples/contactView-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactView
                    example: !include examples/contactView-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactView
                    example: !include examples/contactView-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
      /views: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contactView
                  example: !include examples/contactView-example.json
    /contentSection: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: contentSection
            example: !include examples/contentSection-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: contentSection
                example: !include examples/contentSection-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: contentSection
              example: !include examples/contentSection-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contentSection
                  example: !include examples/contentSection-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: contentSection
                  example: !include examples/contentSection-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: contentSection
                example: !include examples/contentSection-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contentSection
                    example: !include examples/contentSection-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /contentSections: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: contentSection
                example: !include examples/contentSection-example.json
    /customObject: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: customObject
            example: !include examples/customObject-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: customObject
                example: !include examples/customObject-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: customObject
              example: !include examples/customObject-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: customObject
                  example: !include examples/customObject-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: customObject
                  example: !include examples/customObject-example.json
      /updateRuleSet: 
        /{id}: 
          type: responseCodes
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            description: Retrieve object
            queryParameters: 
              depth: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: customObjectUpdateRuleSet
                    example: !include examples/customObjectUpdateRuleSet-example.json
      /updateRuleSets: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: customObjectUpdateRuleSet
                  example: !include examples/customObjectUpdateRuleSet-example.json
    /customObjects: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: customObject
                example: !include examples/customObject-example.json
    /dynamicContent: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: dynamicContent
            example: !include examples/dynamicContent-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: dynamicContent
                example: !include examples/dynamicContent-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: dynamicContent
              example: !include examples/dynamicContent-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: dynamicContent
                  example: !include examples/dynamicContent-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: dynamicContent
                  example: !include examples/dynamicContent-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: dynamicContent
                example: !include examples/dynamicContent-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: dynamicContent
                    example: !include examples/dynamicContent-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /dynamicContents: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: dynamicContent
                example: !include examples/dynamicContent-example.json
    /email: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: email
            example: !include examples/email-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: email
                example: !include examples/email-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: email
              example: !include examples/email-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: email
                  example: !include examples/email-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: email
                  example: !include examples/email-example.json
        /active: 
          /validationErrors: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: objectValidationError
                      example: !include examples/objectValidationError-example.json
        /content: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
          /files: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: urlReplacement
                  example: !include examples/urlReplacement-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: email
                      example: !include examples/email-example.json
          /hyperlinks: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: redirectLink
                  example: !include examples/redirectLink-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: email
                      example: !include examples/email-example.json
          /images: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: urlReplacement
                  example: !include examples/urlReplacement-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: email
                      example: !include examples/email-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: email
                example: !include examples/email-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: email
                    example: !include examples/email-example.json
        /deliverability: 
          type: responseCodes
          get: 
            description: Retrieve object
            queryParameters: 
              contactIds: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: contactEmailDeliverability
                    example: !include examples/contactEmailDeliverability-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
        /preview: 
          type: responseCodes
          get: 
            description: Retrieve object
            queryParameters: 
              contactId: 
            responses: 
              200: 
        /security: 
          /grants: 
            type: responseCodes
            patch: 
              description: ""
              body: 
                application/json: 
                  schema: assetGrant
                  example: !include examples/assetGrant-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                depth: 
                orderBy: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
      /active: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: email
                    example: !include examples/email-example.json
      /config: 
        type: responseCodes
        get: 
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailConfig
                  example: !include examples/emailConfig-example.json
        put: 
          description: Update object
          body: 
            application/json: 
              schema: emailConfig
              example: !include examples/emailConfig-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailConfig
                  example: !include examples/emailConfig-example.json
      /content: 
        type: responseCodes
        post: 
          description: Create object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: email
                  example: !include examples/email-example.json
      /deployment: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: emailDeployment
              example: !include examples/emailDeployment-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailDeployment
                  example: !include examples/emailDeployment-example.json
        /{id}: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailDeployment
                    example: !include examples/emailDeployment-example.json
      /deployments: 
        type: responseCodes
        get: 
          is: [ pagination , extensions ]
          description: Retrieve object
          queryParameters: 
            search: 
            orderBy: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailDeployment
                  example: !include examples/emailDeployment-example.json
        /inline: 
          type: responseCodes
          get: 
            is: [ pagination , extensions ]
            description: Retrieve object
            queryParameters: 
              search: 
              orderBy: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailDeployment
                    example: !include examples/emailDeployment-example.json
      /draft: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: email
                    example: !include examples/email-example.json
      /encodings: 
        type: responseCodes
        get: 
          description: Retrieve object
          queryParameters: 
            depth: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailEncoding
                  example: !include examples/emailEncoding-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
      /footer: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: emailFooter
              example: !include examples/emailFooter-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailFooter
                  example: !include examples/emailFooter-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: emailFooter
                example: !include examples/emailFooter-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailFooter
                    example: !include examples/emailFooter-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailFooter
                    example: !include examples/emailFooter-example.json
          /copy: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: emailFooter
                  example: !include examples/emailFooter-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailFooter
                      example: !include examples/emailFooter-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
        /folder: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /dependencies: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /folders: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: folder
                        example: !include examples/folder-example.json
          /root: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
        /folders: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
      /footers: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailFooter
                  example: !include examples/emailFooter-example.json
      /group: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: emailGroup
              example: !include examples/emailGroup-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailGroup
                  example: !include examples/emailGroup-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: emailGroup
                example: !include examples/emailGroup-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailGroup
                    example: !include examples/emailGroup-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailGroup
                    example: !include examples/emailGroup-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
      /groups: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailGroup
                  example: !include examples/emailGroup-example.json
      /header: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: emailHeader
              example: !include examples/emailHeader-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailHeader
                  example: !include examples/emailHeader-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: emailHeader
                example: !include examples/emailHeader-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailHeader
                    example: !include examples/emailHeader-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailHeader
                    example: !include examples/emailHeader-example.json
          /copy: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: emailHeader
                  example: !include examples/emailHeader-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailHeader
                      example: !include examples/emailHeader-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /security: 
            /grants: 
              type: responseCodes
              patch: 
                description: ""
                body: 
                  application/json: 
                    schema: assetGrant
                    example: !include examples/assetGrant-example.json
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  depth: 
                  orderBy: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: assetGrant
                        example: !include examples/assetGrant-example.json
        /folder: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /dependencies: 
              type: responseCodes
              get: 
                description: Retrieve object
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
            /folders: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: folder
                        example: !include examples/folder-example.json
          /root: 
            type: responseCodes
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
            /contents: 
              type: responseCodes
              get: 
                is: [ advancedSearch ]
                description: Retrieve object
                queryParameters: 
                  extensions: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: minimal
                        example: !include examples/minimal-example.json
        /folders: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
      /headers: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: emailHeader
                  example: !include examples/emailHeader-example.json
      /plainTextGenerator: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: email
              example: !include examples/email-example.json
          responses: 
            200: 
      /signature: 
        /layout: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: emailSignatureLayout
                example: !include examples/emailSignatureLayout-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailSignatureLayout
                    example: !include examples/emailSignatureLayout-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: emailSignatureLayout
                  example: !include examples/emailSignatureLayout-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailSignatureLayout
                      example: !include examples/emailSignatureLayout-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailSignatureLayout
                      example: !include examples/emailSignatureLayout-example.json
        /layouts: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailSignatureLayout
                    example: !include examples/emailSignatureLayout-example.json
        /rule: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: emailSignatureRule
                example: !include examples/emailSignatureRule-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailSignatureRule
                    example: !include examples/emailSignatureRule-example.json
          /{id}: 
            type: responseCodes
            put: 
              description: Update object
              body: 
                application/json: 
                  schema: emailSignatureRule
                  example: !include examples/emailSignatureRule-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailSignatureRule
                      example: !include examples/emailSignatureRule-example.json
            delete: 
              description: Delete object
              responses: 
                200: 
            get: 
              is: [ extensions ]
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: emailSignatureRule
                      example: !include examples/emailSignatureRule-example.json
        /rules: 
          type: responseCodes
          get: 
            is: [ advancedSearch , extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: emailSignatureRule
                    example: !include examples/emailSignatureRule-example.json
      /template: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: email
                    example: !include examples/email-example.json
    /emails: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: email
                example: !include examples/email-example.json
      /recent: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          queryParameters: 
            count: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: email
                  example: !include examples/email-example.json
    /eventRegistration: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: eventRegistration
            example: !include examples/eventRegistration-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: eventRegistration
                example: !include examples/eventRegistration-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: eventRegistration
              example: !include examples/eventRegistration-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: eventRegistration
                  example: !include examples/eventRegistration-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: eventRegistration
                  example: !include examples/eventRegistration-example.json
    /eventRegistrations: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: eventRegistration
                example: !include examples/eventRegistration-example.json
    /fieldMerge: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: fieldMerge
            example: !include examples/fieldMerge-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: fieldMerge
                example: !include examples/fieldMerge-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: fieldMerge
              example: !include examples/fieldMerge-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: fieldMerge
                  example: !include examples/fieldMerge-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: fieldMerge
                  example: !include examples/fieldMerge-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: fieldMerge
                example: !include examples/fieldMerge-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: fieldMerge
                    example: !include examples/fieldMerge-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /fieldMerges: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: fieldMerge
                example: !include examples/fieldMerge-example.json
    /folder: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: folder
            example: !include examples/folder-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /ancestors: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
        /contents: 
          type: responseCodes
          get: 
            is: [ advancedSearch ]
            description: Retrieve object
            queryParameters: 
              extensions: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
    /folders: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
    /form: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: form
            example: !include examples/form-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: form
                example: !include examples/form-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: form
              example: !include examples/form-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: form
                  example: !include examples/form-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: form
                  example: !include examples/form-example.json
        /active: 
          /validationErrors: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: objectValidationError
                      example: !include examples/objectValidationError-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: form
                example: !include examples/form-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: form
                    example: !include examples/form-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
        /integration: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: formIntegration
                    example: !include examples/formIntegration-example.json
        /security: 
          /grants: 
            type: responseCodes
            patch: 
              description: ""
              body: 
                application/json: 
                  schema: assetGrant
                  example: !include examples/assetGrant-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                depth: 
                orderBy: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
      /active: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: form
                    example: !include examples/form-example.json
      /draft: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: form
                    example: !include examples/form-example.json
      /external: 
        type: responseCodes
        get: 
          description: Retrieve object
          queryParameters: 
            url: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: form
                  example: !include examples/form-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
      /template: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: form
                    example: !include examples/form-example.json
    /forms: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: form
                example: !include examples/form-example.json
      /recent: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          queryParameters: 
            count: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: form
                  example: !include examples/form-example.json
    /hyperlink: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: hyperlink
            example: !include examples/hyperlink-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: hyperlink
                example: !include examples/hyperlink-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: hyperlink
              example: !include examples/hyperlink-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: hyperlink
                  example: !include examples/hyperlink-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: hyperlink
                  example: !include examples/hyperlink-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /hyperlinks: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: hyperlink
                example: !include examples/hyperlink-example.json
    /image: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: imageFile
            example: !include examples/imageFile-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: imageFile
                example: !include examples/imageFile-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: imageFile
              example: !include examples/imageFile-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: imageFile
                  example: !include examples/imageFile-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: imageFile
                  example: !include examples/imageFile-example.json
        /content: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: imageFile
                    example: !include examples/imageFile-example.json
          /replace: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: imageFile
                      example: !include examples/imageFile-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /content: 
        type: responseCodes
        post: 
          description: Create object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: imageFile
                  example: !include examples/imageFile-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /images: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: imageFile
                example: !include examples/imageFile-example.json
    /importedFile: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: importedFile
            example: !include examples/importedFile-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: importedFile
                example: !include examples/importedFile-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: importedFile
              example: !include examples/importedFile-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: importedFile
                  example: !include examples/importedFile-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: importedFile
                  example: !include examples/importedFile-example.json
        /content: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: importedFile
                    example: !include examples/importedFile-example.json
          /Replace: 
            type: responseCodes
            post: 
              description: Create object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: importedFile
                      example: !include examples/importedFile-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
      /content: 
        type: responseCodes
        post: 
          description: Create object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: importedFile
                  example: !include examples/importedFile-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
    /importedFiles: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: importedFile
                example: !include examples/importedFile-example.json
    /landingPage: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: landingPage
            example: !include examples/landingPage-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: landingPage
                example: !include examples/landingPage-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: landingPage
              example: !include examples/landingPage-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: landingPage
                  example: !include examples/landingPage-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: landingPage
                  example: !include examples/landingPage-example.json
        /active: 
          /validationErrors: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: objectValidationError
                      example: !include examples/objectValidationError-example.json
        /campaigns: 
          type: responseCodes
          get: 
            description: Retrieve object
            queryParameters: 
              depth: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: campaign
                    example: !include examples/campaign-example.json
        /content: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
          /files: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: urlReplacement
                  example: !include examples/urlReplacement-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: landingPage
                      example: !include examples/landingPage-example.json
          /hyperlinks: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: redirectLink
                  example: !include examples/redirectLink-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: landingPage
                      example: !include examples/landingPage-example.json
          /images: 
            type: responseCodes
            post: 
              description: Create object
              body: 
                application/json: 
                  schema: urlReplacement
                  example: !include examples/urlReplacement-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: landingPage
                      example: !include examples/landingPage-example.json
        /copy: 
          type: responseCodes
          post: 
            description: Create object
            body: 
              application/json: 
                schema: landingPage
                example: !include examples/landingPage-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: landingPage
                    example: !include examples/landingPage-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
        /preview: 
          type: responseCodes
          get: 
            description: Retrieve object
            queryParameters: 
              contactId: 
            responses: 
              200: 
        /security: 
          /grants: 
            type: responseCodes
            patch: 
              description: ""
              body: 
                application/json: 
                  schema: assetGrant
                  example: !include examples/assetGrant-example.json
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
            get: 
              is: [ pagination ]
              description: Retrieve object
              queryParameters: 
                depth: 
                orderBy: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: assetGrant
                      example: !include examples/assetGrant-example.json
      /content: 
        type: responseCodes
        post: 
          description: Create object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: landingPage
                  example: !include examples/landingPage-example.json
      /folder: 
        type: responseCodes
        post: 
          description: Create object
          body: 
            application/json: 
              schema: folder
              example: !include examples/folder-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
        /{id}: 
          type: responseCodes
          put: 
            description: Update object
            body: 
              application/json: 
                schema: folder
                example: !include examples/folder-example.json
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          delete: 
            description: Delete object
            responses: 
              200: 
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /dependencies: 
            type: responseCodes
            get: 
              description: Retrieve object
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
          /folders: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: folder
                      example: !include examples/folder-example.json
        /root: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: folder
                    example: !include examples/folder-example.json
          /contents: 
            type: responseCodes
            get: 
              is: [ advancedSearch ]
              description: Retrieve object
              queryParameters: 
                extensions: 
              responses: 
                200: 
                  body: 
                    application/json: 
                      schema: minimal
                      example: !include examples/minimal-example.json
      /folders: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: folder
                  example: !include examples/folder-example.json
      /template: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: landingPage
                    example: !include examples/landingPage-example.json
    /landingpage: 
      /active: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: landingPage
                    example: !include examples/landingPage-example.json
      /draft: 
        /{id}: 
          type: responseCodes
          post: 
            description: Create object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: landingPage
                    example: !include examples/landingPage-example.json
    /landingPages: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: landingPage
                example: !include examples/landingPage-example.json
      /recent: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          queryParameters: 
            count: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: landingPage
                  example: !include examples/landingPage-example.json
    /microsite: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: microsite
            example: !include examples/microsite-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: microsite
                example: !include examples/microsite-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: microsite
              example: !include examples/microsite-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: microsite
                  example: !include examples/microsite-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: microsite
                  example: !include examples/microsite-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
    /microsites: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: microsite
                example: !include examples/microsite-example.json
    /optionList: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: optionList
            example: !include examples/optionList-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: optionList
                example: !include examples/optionList-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: optionList
              example: !include examples/optionList-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: optionList
                  example: !include examples/optionList-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: optionList
                  example: !include examples/optionList-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
    /optionLists: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: optionList
                example: !include examples/optionList-example.json
    /pageTag: 
      /{id}: 
        type: responseCodes
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: pageTag
                  example: !include examples/pageTag-example.json
      /group: 
        /{id}: 
          type: responseCodes
          get: 
            is: [ extensions ]
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: pageTagGroup
                    example: !include examples/pageTagGroup-example.json
      /groups: 
        type: responseCodes
        get: 
          is: [ pagination ]
          description: Retrieve object
          queryParameters: 
            depth: 
            search: 
            orderBy: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: pageTagGroup
                  example: !include examples/pageTagGroup-example.json
    /pageTags: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: pageTag
                example: !include examples/pageTag-example.json
    /program: 
      /{id}: 
        type: responseCodes
        get: 
          description: Retrieve object
          queryParameters: 
            depth: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: program
                  example: !include examples/program-example.json
      /{programId}: 
        /occurrence: 
          /{occurrenceId}: 
            /logs: 
              type: responseCodes
              get: 
                is: [ pagination ]
                description: Retrieve object
                queryParameters: 
                  startAt: 
                  endAt: 
                responses: 
                  200: 
                    body: 
                      application/json: 
                        schema: programLog
                        example: !include examples/programLog-example.json
      /step: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            queryParameters: 
              depth: 
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: programStep
                    example: !include examples/programStep-example.json
    /programs: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: program
                example: !include examples/program-example.json
    /style: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: documentStyle
            example: !include examples/documentStyle-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: documentStyle
                example: !include examples/documentStyle-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: documentStyle
              example: !include examples/documentStyle-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: documentStyle
                  example: !include examples/documentStyle-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          is: [ extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: documentStyle
                  example: !include examples/documentStyle-example.json
        /dependencies: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: minimal
                    example: !include examples/minimal-example.json
    /styles: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: documentStyle
                example: !include examples/documentStyle-example.json
    /template: 
      type: responseCodes
      post: 
        description: Create object
        body: 
          application/json: 
            schema: template
            example: !include examples/template-example.json
        responses: 
          200: 
            body: 
              application/json: 
                schema: template
                example: !include examples/template-example.json
      /{id}: 
        type: responseCodes
        put: 
          description: Update object
          body: 
            application/json: 
              schema: template
              example: !include examples/template-example.json
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
        delete: 
          description: Delete object
          responses: 
            200: 
        get: 
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
      /categories: 
        type: responseCodes
        get: 
          is: [ pagination , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: templateCategory
                  example: !include examples/templateCategory-example.json
      /category: 
        /{id}: 
          type: responseCodes
          get: 
            description: Retrieve object
            responses: 
              200: 
                body: 
                  application/json: 
                    schema: templateCategory
                    example: !include examples/templateCategory-example.json
    /templates: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: template
                example: !include examples/template-example.json
      /campaign: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
      /email: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
      /form: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
      /landingpage: 
        type: responseCodes
        get: 
          is: [ advancedSearch , extensions ]
          description: Retrieve object
          responses: 
            200: 
              body: 
                application/json: 
                  schema: template
                  example: !include examples/template-example.json
    /trackedUrl: 
      /{id}: 
        type: responseCodes
        get: 
          description: Retrieve object
          queryParameters: 
            depth: 
          responses: 
            200: 
              body: 
                application/json: 
                  schema: trackedUrl
                  example: !include examples/trackedUrl-example.json
    /trackedUrls: 
      type: responseCodes
      get: 
        is: [ advancedSearch , extensions ]
        description: Retrieve object
        responses: 
          200: 
            body: 
              application/json: 
                schema: trackedUrl
                example: !include examples/trackedUrl-example.json
documentation: 
  - title: Headline
    content: !include docs/headline.md